#!/usr/bin/env bash
# set -x

. ${LIB_PATH}/scripts/lib/func.sh

if [ -n "$1" ]; then
  SLUG=$1
else
  . "${CWD_PATH}/.env" > /dev/null 2>&1
fi

SLUG=$(${LIB_PATH}/scripts/lib/slugify $SLUG 2> /dev/null)

if [ "$SLUG" == "shutdown" ]; then

  start_spinner "Shutting containers for all sites..."

  docker container stop $(docker container ls -q --all) > /dev/null 2>&1
  # docker container kill $(docker container ls -q --all) > /dev/null 2>&1
  # docker container rm $(docker container ls -q --all) > /dev/null 2>&1

  stop_spinner 0
  
  pd "See you later!"

elif [ "$SLUG" == "purge" ]; then

  start_spinner "Removing all Caesar containers not active at the moment."

  docker container stop $(docker container ls -q --filter "status=exited" --filter "name=caesar") > /dev/null 2>&1
  docker container rm $(docker container ls -q --filter "status=exited" --filter "name=caesar") > /dev/null 2>&1
  
  stop_spinner 0

  start_spinner "Prune unsed networks..."

  docker network rm $(docker network ls -q --filter "name=caesar_site") &> /dev/null 2>&1
  
  stop_spinner 0
  
  pd "See you later!"

else

  start_spinner "Shutting containers for site $SLUG down..."
    
  docker container stop $(docker container ls -q --all --filter "name=$SLUG") &> /dev/null 2>&1
  # docker container kill $(docker container ls -q --all --filter "name=$SLUG") > /dev/null 2>&1
  # docker container rm $(docker container ls -q --all --filter "name=$SLUG") > /dev/null 2>&1

  stop_spinner 0
  
  pd "See you later!"

fi

echo ""